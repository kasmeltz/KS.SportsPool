@using KS.SportsPool.MVC.Models;
@using KS.SportsPool.Data.POCO;
@model PoolViewModel

<div style="position: fixed; text-align: center; background:#dddddd; padding: 5px; bottom:0px; left:0px; width:100%; border: 1px solid black;">
    <p id="errorMessage" style="color: #ff0000; font-size:large;">
        @ViewBag.Error
    </p>
    <p id="successMessage" style="color: #00ff00; font-size:large;">
        @ViewBag.Success
    </p>
    <a href="/Admin/UpdateScores" class="btn btn-primary">Update Pool Scores</a>
</div>

<div style="width: 100%; text-align: center;">
    <a href="/Admin/Pools" class="btn btn-primary">Pools</a>
    <a href="/Admin/Athletes" class="btn btn-primary">Athletes</a>
    <a href="/Admin/Teams" class="btn btn-primary">Teams</a>
    <h4>@Model.Entry.Name</h4>
    <h5>@Model.Entry.Telephone &nbsp; @Model.Entry.Email</h5>

    @{
        var athleteGroups = Model.Athletes.OrderBy(ath => ath.GroupName).GroupBy(tea => tea.GroupName);
    }

    @{
        for (int round = 1; round <= 4; round++)
        {
            <div style="color: #00ff00; background:#000000;">Round @round</div>
            var teamConferenceGroups = Model.Teams.OrderBy(tea => tea.Conference).GroupBy(tea => tea.Conference);
            foreach (var teamConference in teamConferenceGroups)
            {
                Team conferenceTeam = teamConference.FirstOrDefault();
                @:<div style="float: left; width: 50%;">
                    <div style="color: #00cc00; background:#000000;">@conferenceTeam.Conference</div>
                var teamDivisionGroups = teamConference.GroupBy(tea => tea.Division);
                foreach (var teamDivision in teamDivisionGroups)
                {
                    Team divisionTeam = teamDivision.FirstOrDefault();
                    List<SelectListItem> teamListItems = new List<SelectListItem>();
                    foreach (Team team in teamDivision)
                    {
                        bool isSelected = false;
                        var pickedTeams = Model.TeamPicks.Where(tp => tp.Round == round && tp.Id == team.Id);
                        if (pickedTeams.Count() > 0)
                        {
                            isSelected = true;
                        }
                        teamListItems.Add(new SelectListItem
                        {
                            Text = team.Name,
                            Value = team.Id.ToString(),
                            Selected = isSelected
                        });
                    }
                    <div style="float:left;  width: 50%;">
                        <div style="color: #009900; background:#000000;">@divisionTeam.Division</div>
                        @Html.ListBox("TeamPicks", teamListItems)
                    </div>
                }
                @:</div>
        }
            <div style="clear: both;"></div>
        }
    }
</div>
